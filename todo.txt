[HIGH PRIORITY]
- replace inappropriate doubles with floats                      []
- discard all raw pointers and replace them with smart pointers  []
- use delegating constructor for every class                     []
- use shared_ptr for vectors of objects and use unique_ptr for single class private member objects []
- give orders a unique uuid with "ns" prepended to it            []
- fix bug where server only reads once and then does not ever read again []
- create a sorting box on the left side of the application and create PREVIOUS/NEXT or SHOW_MORE buttons for the catalog view []
- improve currency conversion and use multiple sources to retrieve currency rates []
- complete application back-end (functionality)                  []
- complete application front-end (user interface)                []
- create messages button and a seller hub/section button         []
- make postgresql optional                                       []
- create a node list of trusted and verified nodes so users (sellers) do not have to sync entire blockchain []

[MID PRIORITY]
- make table names plural ('cause select * from customer seems "grammatically" incorrect to me)
- rewrite renderer.cpp from scratch (if I can't find an experienced graphics programmer)
- figure out how to turn qrcode data into png and jpeg
- change font
- create product category table, simplify category list and create subcategories
- create catalog with sorting by price, category, etc.
- work on search engine
- change network type to mainnet (when ready for release)
- host database on self-hosted dedicated server or mutable decentralized database hosting network like sia (SkyDB), filecoin/ipfs, etc.
- learn to encrypt and decrypt database
- learn to backup database
- add auction system
- remove login as guest option (for now, since I don't know how guest data will be stored in main database)
- make neroshop p2p (peer-to-peer)
- validate addresses before sending it out to buyer
- add e2e encrypted chat/messaging and forum
- best-seller/best vendor sections
- dispute and report system
- wipe orders (and their order_items) within a certain time frame (30 days)
- multisignature wallet support
- encrypt sensative data before storing it in database
- create help/support section                                    []

[LOW PRIORITY]
- keep number of source files in "neroshop/src" at no more than 20               [x]
- keep number of external dependencies in "neroshop/external" at no more than 10 [x]
- create neroshop domain name (.org preffered)                                   []
- create neroshop onion address                                                  []
- create neroshop matrix server                                                  [x]
- host neroshop on gitlab or something more open-source                          []
- tor integration                                                                []
- allow contributors to create neroshop bindings for other C-based programming languages such as lua, python, ruby, etc. [-]

[UI]
- prevent mouse press from affecting overlapped GUIs     []
- fix on_hover [text edit]                               [x] 2022
- make cursor follow mouse pointer on click              [x] 2021-12-14
- blinking cursor [text edit]                            [x] 2021-12-15
- copy to clipboard                                      [x] 2021-12-16
- placeholder text [text edit]                           [x] 2021-12-17
- add rounded corners [all]                              [x] 2022-03-07
- get key combination input (e.g. shift + A) [text edit] [x] 2022-01-02
- hide sensative text [text edit]                        [x] 2022-01-03
- remove length restrictions and add scrolling text      [x] 2022-01-25
- add unicode support [text edit]                        []
- add multi-line label [text edit]                       []
- change default alpha values to 1.0 [all]               [x] 2021-12-17
- add namespace dokun to every dokun-ui class            []
- fix scrollbar-mouse move                               []
- created a new version of spinner                       [x] 2021-12-18
- fix edit text and cursor when resized                  []
- add eye icon to text edit to toggle sensative text visibility [x] 2022-04-08
- work on list gui                                       []
- work on combobox gui                                   []
- work on scrollbar and scrollarea                       []
- work on tab gui                                        []

[ISSUES]
Font crashes when loading (only a small few fonts are immune from this)
Keyboard input is received/triggerred multiple times even with a single key press
Application crashes on logout (this is probably due to the deletion of the user object)

[HIRING]
- hire graphics programmer to fix and optimize rendering code in "renderer.cpp"
- hire network programmer to implement communication between applications and servers or implement peer-to-peer system.
- hire web developer to help develop website ()

[ENCRYPTION TOOLS AND ALGORITHMS]
hashing (pw)   : [bcrypt], scrypt, argon2, PBKDF2
hashing (email): [SHA256], MD5, SHA1
encryption library: [openssl], crypto++ (cryptopp), libsodium
DB/file hosting: siacoin / SkyDB, filecoin, ipfs, bittorent
asymmetric encryption: [RSA]

[NOTES]
Since monero uses openssl as a dependency (https://github.com/monero-project/monero#dependencies), I will use openssl's sha-256 for hashing emails.
Passwords will be salted and hashed with bcrypt.
RSA will be used for end-to-end encrypting short notes, messages, and mailing addresses.
Though asymmetric encryption algorithms like RSA may be slower than symmetric encryption algorithms, they are more secure than symmetric encryption algorithms.

I realize that I need an online database that is scalable like MySQL or PostgreSQL 
and I cannot use SQLite since its only for offline use :(
I had to choose between MySQL and PostgreSQL so I went with PostgreSQL since the license is more free than
MySQL's license.
Also, I found out that Postgres has built-in NoSQL with JSON/JSONB so there may not be a need for an alternative NoSQL database.

For the user interface, I will be using dokun-ui. "dokun-ui" is a custom-made user interface library that takes some inspiration from QT Creator and HTML/CSS and is forked from dokun (https://github.com/sidtheprince/dokun), an abandoned project.
The long-term goals that I am aiming for neroshop in order are privacy and decentralization then user-friendly UI/UX, and finally, scalability.

In the future, I may consider supporting other private-by-default coins such as wownero, dero, and piratechain.

