# vim: filetype=dockerfile:
#
# Install neroshop external libraries and build neroshop on alpine linux
#
# Basic usage:
# * Build image:
#   docker build -f alpine -t neroshop .
# * Run command shell inside image:
#   docker run -ti neroshop
# * Squash layers to reduce size:
#   docker-squash --cleanup neroshop -t neroshop:build

FROM alpine

# Install system-wide prerequisites
RUN apk update && apk add patch gcc g++ make boost-dev git cmake unbound-dev czmq-dev libexecinfo-dev hidapi-dev libsodium-dev miniupnpc-dev openpgm-dev openssl-dev rapidjson-dev readline-dev unbound-dev zeromq-dev qtchooser protobuf-dev libusb-dev

# Clone neroshop
RUN git clone https://github.com/neroshop/neroshop.git
ARG COMMIT
RUN cd neroshop && git checkout $COMMIT
# Build external libs
RUN cd neroshop && mkdir -p external/build && cd external/build && cmake .. && make -sj$(grep -c processor /proc/cpuinfo)

# Clean up
RUN rm -rf neroshop/external/build

# The commands below can be used to build and test neroshop if anything
# upstream is updated. They should remain commented so this image can be used
# in continuous integration (1) to a generate docker image with only the
# external libraries installed using this file, followed by (2) running only a
# neroshop build/test cycle on top of this pre-build image.

# Build neroshop
#RUN cd neroshop && mkdir -p build && cd build && cmake .. && make -sj$(grep -c processor /proc/cpuinfo)
# Run tests
#RUN cd neroshop/build && ctest -j$(grep -c processor /proc/cpuinfo)
